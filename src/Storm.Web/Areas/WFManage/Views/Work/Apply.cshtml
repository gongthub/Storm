@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Form.cshtml";
}
<script>
    var keyValue = $.request("keyValue");
    var commondefault = [];
    var bindselectcontrols = [];
    var bindorgcontrols = [];
    var defalutradios = [];
    var defalutcheckboxs = [];
    var defalutselects = [];
    var defalutcomboxs = [];
    var defalutorgs = [];
    $(function () {
        if (!!keyValue) {
            getCommonDefaultValues();
            $.ajax({
                url: "/WFManage/Work/GetFormDesignJosn",
                data: { keyValue: keyValue },
                dataType: "json",
                async: false,
                success: function (data) {
                    if (data.codes != null && data.codes != undefined && data.codes != "") {
                        var codeStrs = initContents(data.codes);
                        $("#dvCentents").html(codeStrs);
                    }
                }
            });
            initbindSelectControls();
            initbindOrgControls();
            initDefalutradios();
            initDefalutcheckboxs();
            initDefalutselects();
            initDefalutcomboxs();
            initDefalutorgs();
        }
    });
    function initContents(codes) {
        var element = $(codes).get(0);
        var jqueryobj = $(element);
        var customcontrols = jqueryobj.find(".flowformcontrol");
        if (customcontrols != null && customcontrols != undefined && customcontrols.length > 0) {
            for (var i = 0; i < customcontrols.length; i++) {
                var objt = customcontrols[i];
                var controlType = $(objt).attr("type1");
                switch (controlType) {
                    case "flow_text":
                        var otext = document.createElement('input');
                        if ($(objt).attr("id")) {
                            otext.id = $(objt).attr("id");
                        }
                        $(otext).attr("type", "text");
                        $(otext).attr("type1", "flow_text");
                        $(otext).attr("class", "flowformcontrol");

                        if ($(objt).attr("name")) {
                            $(otext).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).css("width")) {
                            $(otext).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("readonly")) {
                            $(otext).attr("readonly", $(objt).attr("readonly"));
                        }
                        if ($(objt).attr("maxlength")) {
                            $(otext).attr("maxlength", $(objt).attr("maxlength"));
                        }
                        if ($(objt).attr("valuetype")) {
                            var valuetype = $(objt).attr("valuetype");
                            $(otext).attr("valuetype", $(objt).attr("valuetype"));
                            var defauleValues = getDefaueValues(valuetype);
                            $(otext).attr("value", defauleValues);
                        }
                        $(objt).after(otext.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_textarea":
                        var otextarea = document.createElement('textarea');
                        if ($(objt).attr("id")) {
                            otextarea.id = $(objt).attr("id");
                        }
                        $(otextarea).attr("type1", "flow_textarea");
                        $(otextarea).attr("class", "flowformcontrol");

                        if ($(objt).attr("name")) {
                            $(otextarea).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).css("width")) {
                            $(otextarea).css("width", $(objt).css("width"));
                        }
                        if ($(objt).css("height")) {
                            $(otextarea).css("height", $(objt).css("height"));
                        }
                        if ($(objt).attr("readonly")) {
                            $(otextarea).attr("readonly", $(objt).attr("readonly"));
                        }
                        if ($(objt).attr("maxlength")) {
                            $(otextarea).attr("maxlength", $(objt).attr("maxlength"));
                        }
                        if ($(objt).attr("valuetype")) {
                            var valuetype = $(objt).attr("valuetype");
                            $(otextarea).attr("valuetype", $(objt).attr("valuetype"));
                            var defauleValues = getDefaueValues(valuetype, otextarea.id);
                            otextarea.innerText = defauleValues;
                        }
                        $(objt).after(otextarea.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_radio":
                        if ($(objt).attr("id")) {
                            var rediocontrolId = $(objt).attr("id");
                            var selectDatas_radio = getselectDatas(rediocontrolId);
                            if (selectDatas_radio != null && selectDatas_radio != undefined && selectDatas_radio.length > 0) {
                                for (var k = 0; k < selectDatas_radio.length; k++) {
                                    var otextradio = document.createElement('input');
                                    $(otextradio).attr("type", "radio");
                                    $(otextradio).attr("type1", "flow_radio");
                                    $(otextradio).attr("class", "flowformcontrol");
                                    $(otextradio).attr("name", rediocontrolId);
                                    $(otextradio).attr("value", selectDatas_radio[k].id);
                                    $(objt).after(selectDatas_radio[k].text);
                                    $(objt).after(otextradio.outerHTML);
                                }
                                if ($(objt).attr("defaultvalue")) {
                                    var defalutradiomodel = { controlId: rediocontrolId, dataId: $(objt).attr("defaultvalue") };
                                    defalutradios.push(defalutradiomodel);
                                }
                            }
                            $(objt).remove();
                        }
                        break;
                    case "flow_checkbox":
                        if ($(objt).attr("id")) {
                            var checkboxcontrolId = $(objt).attr("id");
                            var selectDatas_checkbox = getselectDatas(checkboxcontrolId);
                            if (selectDatas_checkbox != null && selectDatas_checkbox != undefined && selectDatas_checkbox.length > 0) {
                                for (var j = 0; j < selectDatas_checkbox.length; j++) {
                                    var otextcheckbox = document.createElement('input');
                                    $(otextcheckbox).attr("type", "checkbox");
                                    $(otextcheckbox).attr("type1", "flow_checkbox");
                                    $(otextcheckbox).attr("class", "flowformcontrol");
                                    $(otextcheckbox).attr("name", checkboxcontrolId);
                                    $(otextcheckbox).attr("value", selectDatas_checkbox[j].id);
                                    $(objt).after(selectDatas_checkbox[j].text);
                                    $(objt).after(otextcheckbox.outerHTML);
                                }
                                if ($(objt).attr("defaultvalue")) {
                                    var defalutcheckboxmodel = { controlId: checkboxcontrolId, dataId: $(objt).attr("defaultvalue") };
                                    defalutcheckboxs.push(defalutcheckboxmodel);
                                }
                            }
                            $(objt).remove();
                        }
                        break;
                    case "flow_hidden":
                        var otexthidden = document.createElement('input');
                        if ($(objt).attr("id")) {
                            otexthidden.id = $(objt).attr("id");
                        }
                        $(otexthidden).attr("type", "hidden");
                        $(otexthidden).attr("type1", "flow_hidden");
                        $(otexthidden).attr("class", "flowformcontrol");

                        if ($(objt).attr("name")) {
                            $(otexthidden).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).attr("valuetype")) {
                            var valuetype = $(objt).attr("valuetype");
                            $(otexthidden).attr("valuetype", $(objt).attr("valuetype"));
                            var defauleValues = getDefaueValues(valuetype);
                            $(otexthidden).attr("value", defauleValues);
                        }
                        $(objt).after(otexthidden.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_label":
                        var otextlable = document.createElement('lable');
                        if ($(objt).attr("id")) {
                            otextlable.id = $(objt).attr("id");
                        }
                        $(otextlable).attr("type1", "flow_label");
                        $(otextlable).attr("class", "flowformcontrol");

                        if ($(objt).attr("name")) {
                            $(otextlable).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).css("width")) {
                            $(otextlable).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("valuetype")) {
                            var valuetype = $(objt).attr("valuetype");
                            $(otextlable).attr("valuetype", $(objt).attr("valuetype"));
                            var defauleValues = getDefaueValues(valuetype);
                            otextlable.innerText = defauleValues;
                        }
                        $(objt).after(otextlable.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_select":
                        var otextselect = document.createElement('select');
                        if ($(objt).attr("id")) {
                            otextselect.id = $(objt).attr("id");
                        }
                        $(otextselect).attr("type1", "flow_select");
                        $(otextselect).attr("class", "flowformcontrol");

                        if ($(objt).css("width")) {
                            $(otextselect).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("dataid")) {
                            var dataid = $(objt).attr("dataid");
                            $(objt).after(otextselect.outerHTML);
                            var selc = { controlId: otextselect.id, dataId: dataid };
                            bindselectcontrols.push(selc);
                            if ($(objt).attr("defaultvalue")) {
                                var dsel = { controlId: otextselect.id, dataId: $(objt).attr("defaultvalue") };
                                defalutselects.push(dsel);
                            }
                        }
                        $(objt).remove();
                        break;
                    case "flow_combox":
                        var otextcombox = document.createElement('select');
                        if ($(objt).attr("id")) {
                            otextcombox.id = $(objt).attr("id");
                        }
                        $(otextcombox).attr("type1", "flow_combox");
                        $(otextcombox).attr("class", "flowformcontrol");
                        $(otextcombox).attr("multiple", "multiple");

                        if ($(objt).css("width")) {
                            $(otextcombox).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("dataid")) {
                            var dataid = $(objt).attr("dataid");
                            $(objt).after(otextcombox.outerHTML);
                            var selc = { controlId: otextcombox.id, dataId: dataid };
                            bindselectcontrols.push(selc);
                            if ($(objt).attr("defaultvalue")) {
                                var dcom = { controlId: otextcombox.id, dataId: $(objt).attr("defaultvalue") };
                                defalutcomboxs.push(dcom);
                            }
                        }
                        $(objt).remove();
                        break;
                    case "flow_org":
                        var otextorg = document.createElement('select');
                        if ($(objt).attr("id")) {
                            otextorg.id = $(objt).attr("id");
                        }
                        $(otextorg).attr("type1", "flow_org");
                        $(otextorg).attr("class", "flowformcontrol");

                        if ($(objt).css("width")) {
                            $(otextorg).css("width", $(objt).css("width"));
                        }
                        $(objt).after(otextorg.outerHTML);
                        var selc = { controlId: otextorg.id };
                        bindorgcontrols.push(selc);
                        if ($(objt).attr("defaultvalue")) {
                            var osel = { controlId: otextorg.id, dataId: $(objt).attr("defaultvalue") };
                            defalutorgs.push(osel);
                        }
                        $(objt).remove();
                        break;
                    case "flow_date":
                        var otextdate = document.createElement('input');
                        if ($(objt).attr("id")) {
                            otextdate.id = $(objt).attr("id");
                        }
                        $(otextdate).attr("type", "text");
                        $(otextdate).attr("type1", "flow_date");
                        $(otextdate).attr("class", "flowformcontrol form-control input-wdatepicker");
                        $(otextdate).attr("onfocus", "WdatePicker()");

                        if ($(objt).attr("name")) {
                            $(otextdate).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).css("width")) {
                            $(otextdate).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("defaultvalue")) {
                            var dateValue = $(objt).attr("defaultvalue");
                            if (dateValue == "1") {
                                $(otextdate).attr("value", getDateNow("yyyy-MM-dd"));
                            }
                        }
                        $(objt).after(otextdate.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_datetime":
                        var otextdatetime = document.createElement('input');
                        if ($(objt).attr("id")) {
                            otextdatetime.id = $(objt).attr("id");
                        }
                        $(otextdatetime).attr("type", "text");
                        $(otextdatetime).attr("type1", "flow_datetime");
                        $(otextdatetime).attr("class", "flowformcontrol form-control input-wdatepicker");
                        $(otextdatetime).attr("onfocus", "WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss' })");

                        if ($(objt).attr("name")) {
                            $(otextdatetime).attr("name", $(objt).attr("name"));
                        }
                        if ($(objt).css("width")) {
                            $(otextdatetime).css("width", $(objt).css("width"));
                        }
                        if ($(objt).attr("defaultvalue")) {
                            var datetimeValue = $(objt).attr("defaultvalue");
                            if (datetimeValue == "1") {
                                $(otextdatetime).attr("value", getDateNow("yyyy-MM-dd HH:mm:ss"));
                            }
                        }
                        $(objt).after(otextdatetime.outerHTML);
                        $(objt).remove();
                        break;
                    case "flow_files":
                        var otextfile = document.createElement('input');
                        if ($(objt).attr("id")) {
                            otextfile.id = $(objt).attr("id");
                        }
                        $(otextfile).attr("type", "file");
                        $(otextfile).attr("type1", "flow_files");
                        $(otextfile).attr("class", "flowformcontrol");
                        var isMun = $(objt).attr('isMu');
                        if (isMun == "true") {
                            $(otextfile).attr("multiple", "multiple");
                        }
                        if ($(objt).css("width")) {
                            $(otextfile).css("width", $(objt).css("width"));
                        }
                        $(objt).after(otextfile.outerHTML);
                        $(objt).remove();
                        break;
                }
            }
        }

        return jqueryobj.context.outerHTML;
    }
    function getCommonDefaultValues() {
        if (!!keyValue) {
            $.ajax({
                url: "/WFManage/CustomForm/GetCommonDefaultProgramsJson",
                data: { flowId: keyValue },
                dataType: "json",
                async: false,
                success: function (data) {
                    commondefault = data;
                }
            });
        }
    }
    function getDefaueValues(valType, controlId) {
        var strValues = "";
        if (valType == "0") {
            $.ajax({
                url: "/WFManage/CustomForm/GetCommonCustomDefaultValuesJson",
                data: { flowId: keyValue, controlId: controlId },
                dataType: "text",
                async: false,
                success: function (data) {
                    strValues = data;
                }
            });
        } else {
            if (commondefault != null && commondefault != undefined && commondefault.length > 0) {
                for (var i = 0; i < commondefault.length; i++) {
                    var commodel = commondefault[i];
                    if (commodel.Value == valType) {
                        strValues = commodel.Desc;
                        break;
                    }
                }
            }
        }
        return strValues;
    }
    function getselectDatas(controlId) {
        var selectDatas;
        $.ajax({
            url: "/WFManage/CustomForm/GetCommonCustomDefaultTypeJson",
            data: { flowId: keyValue, controlId: controlId },
            dataType: "text",
            async: false,
            success: function (val) {
                $.ajax({
                    url: "/WFManage/FlowDictionaryDetail/GetSelectJsonByItemId",
                    data: { itemId: val },
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        selectDatas = data;
                    }
                });
            }
        });
        return selectDatas;
    }
    function bindSelect(controlId, itemId) {
        $("#" + controlId).bindSelect({
            url: "/WFManage/FlowDictionaryDetail/GetSelectJsonByItemId?itemId=" + itemId,
            id: "id",
            text: "text"
        });
    }
    function bindOrgSelect(controlId) {
        $("#" + controlId).bindSelect({
            url: "/SystemManage/Organize/GetTreeSelectJson",
        });
    }
    function initbindSelectControls() {
        if (bindselectcontrols != null && bindselectcontrols != undefined && bindselectcontrols.length > 0) {
            for (var i = 0; i < bindselectcontrols.length; i++) {
                bindSelect(bindselectcontrols[i].controlId, bindselectcontrols[i].dataId);
            }
        }
    }
    function initbindOrgControls() {
        if (bindorgcontrols != null && bindorgcontrols != undefined && bindorgcontrols.length > 0) {
            for (var i = 0; i < bindorgcontrols.length; i++) {
                bindOrgSelect(bindorgcontrols[i].controlId);
            }
        }
    }
    function initDefalutradios() {
        if (defalutradios != null && defalutradios != undefined && defalutradios.length > 0) {
            for (var i = 0; i < defalutradios.length; i++) {
                $(":radio[name='" + defalutradios[i].controlId + "'][value='" + defalutradios[i].dataId + "']").prop("checked", "checked");
            }
        }
    }
    function initDefalutcheckboxs() {
        if (defalutcheckboxs != null && defalutcheckboxs != undefined && defalutcheckboxs.length > 0) {
            for (var i = 0; i < defalutcheckboxs.length; i++) {
                if (defalutcheckboxs[i].dataId != null && defalutcheckboxs[i].dataId != undefined && defalutcheckboxs[i].dataId != "") {
                    var boxids = defalutcheckboxs[i].dataId.split(',');
                    if (boxids != null && boxids != undefined && boxids.length > 0) {
                        for (var j = 0; j < boxids.length; j++) {
                            $(":checkbox[name='" + defalutcheckboxs[i].controlId + "'][value='" + boxids[j] + "']").prop("checked", "checked");
                        }
                    }
                }
            }
        }
    }
    function initDefalutselects() {
        if (defalutselects != null && defalutselects != undefined && defalutselects.length > 0) {
            for (var i = 0; i < defalutselects.length; i++) {
                if (defalutselects[i].dataId != null && defalutselects[i].dataId != undefined && defalutselects[i].dataId != "") {
                    $("#" + defalutselects[i].controlId).val(defalutselects[i].dataId).trigger("change");
                }
            }
        }
    }
    function initDefalutcomboxs() {
        if (defalutcomboxs != null && defalutcomboxs != undefined && defalutcomboxs.length > 0) {
            for (var i = 0; i < defalutcomboxs.length; i++) {
                if (defalutcomboxs[i].dataId != null && defalutcomboxs[i].dataId != undefined && defalutcomboxs[i].dataId != "") {
                    var comboxitems = [];
                    comboxitems = defalutcomboxs[i].dataId.split(',');
                    $("#" + defalutcomboxs[i].controlId).val(comboxitems).trigger("change");
                }
            }
        }
    }
    function initDefalutorgs() {
        if (defalutorgs != null && defalutorgs != undefined && defalutorgs.length > 0) {
            for (var i = 0; i < defalutorgs.length; i++) {
                if (defalutorgs[i].dataId != null && defalutorgs[i].dataId != undefined && defalutorgs[i].dataId != "") {
                    $("#" + defalutorgs[i].controlId).val(defalutorgs[i].dataId).trigger("change");
                }
            }
        }
    }
    function submitForm() {
        if (!$('#form1').formValid()) {
            return false;
        }
        $.submitForm({
            url: "/WFManage/Flow/SubmitForm?keyValue=" + keyValue,
            param: $("#form1").formSerialize(),
            success: function () {
                $.currentWindow().$("#gridList").trigger("reloadGrid");
            }
        })
    }
</script>

<form id="form1">
    <div id="dvCentents" style="margin:20px;">
    </div>
</form>
